{"version":3,"file":"hybridSearchQueryResult.js","sourceRoot":"","sources":["../../../src/request/hybridSearchQueryResult.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAIlC,MAAM,UAAU,GAAG;IACjB,GAAG,EAAE,MAAM;IACX,OAAO,EAAE,SAAS;IAClB,eAAe,EAAE,iBAAiB;CACnC,CAAC;AAEF,MAAM,OAAO,uBAAuB;IAOlC,YAAY,GAAW,EAAE,eAAyB,EAAE,IAA6B;QAC/E,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;QACvC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAEM,MAAM,CAAC,MAAM,CAA2B,QAAW;QACxD,MAAM,GAAG,GAAG,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,GAAG,EAAE,CAAC;YACT,MAAM,IAAI,KAAK,CAAC,GAAG,UAAU,CAAC,GAAG,cAAc,CAAC,CAAC;QACnD,CAAC;QAED,MAAM,YAAY,GAAG,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QAClD,IAAI,CAAC,YAAY,IAAI,OAAO,YAAY,KAAK,QAAQ,EAAE,CAAC;YACtD,MAAM,IAAI,KAAK,CAAC,GAAG,UAAU,CAAC,OAAO,cAAc,CAAC,CAAC;QACvD,CAAC;QAED,MAAM,YAAY,GAAG,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACtD,IAAI,CAAC,YAAY,IAAI,OAAO,YAAY,KAAK,QAAQ,EAAE,CAAC;YACtD,MAAM,IAAI,KAAK,CAAC,GAAG,UAAU,CAAC,OAAO,oDAAoD,CAAC,CAAC;QAC7F,CAAC;QAED,MAAM,eAAe,GAAG,YAAY,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;QACjE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE,CAAC;YACpC,MAAM,IAAI,KAAK,CAAC,GAAG,UAAU,CAAC,eAAe,cAAc,CAAC,CAAC;QAC/D,CAAC;QAED,OAAO,IAAI,uBAAuB,CAAC,GAAG,EAAE,eAAe,EAAE,YAAY,CAAC,CAAC;IACzE,CAAC;CACF","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { ItemDefinition } from \"../client\";\n\nconst FieldNames = {\n  Rid: \"_rid\",\n  Payload: \"payload\",\n  ComponentScores: \"componentScores\",\n};\n\nexport class HybridSearchQueryResult {\n  rid: string;\n  componentScores: number[];\n  data: any;\n  score: number;\n  ranks: number[];\n\n  constructor(rid: string, componentScores: number[], data: Record<string, unknown>) {\n    this.rid = rid;\n    this.componentScores = componentScores;\n    this.data = data;\n  }\n\n  public static create<T extends ItemDefinition>(document: T): HybridSearchQueryResult {\n    const rid = document[FieldNames.Rid];\n    if (!rid) {\n      throw new Error(`${FieldNames.Rid} must exist.`);\n    }\n\n    const outerPayload = document[FieldNames.Payload];\n    if (!outerPayload || typeof outerPayload !== \"object\") {\n      throw new Error(`${FieldNames.Payload} must exist.`);\n    }\n\n    const innerPayload = outerPayload[FieldNames.Payload];\n    if (!innerPayload || typeof innerPayload !== \"object\") {\n      throw new Error(`${FieldNames.Payload} must exist nested within the outer payload field.`);\n    }\n\n    const componentScores = outerPayload[FieldNames.ComponentScores];\n    if (!Array.isArray(componentScores)) {\n      throw new Error(`${FieldNames.ComponentScores} must exist.`);\n    }\n\n    return new HybridSearchQueryResult(rid, componentScores, innerPayload);\n  }\n}\n"]}
{"version":3,"file":"ConflictResponse.js","sourceRoot":"","sources":["../../../../src/client/Conflict/ConflictResponse.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,gBAAgB,EAAE,MAAM,eAAe,CAAC;AAKjD,MAAM,OAAO,gBAAiB,SAAQ,gBAA+C;IACnF,YACE,QAAuC,EACvC,OAAsB,EACtB,UAAkB,EAClB,QAAkB,EAClB,WAA8B;QAE9B,KAAK,CAAC,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC;QAClD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;CAGF","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport type { CosmosDiagnostics } from \"../../CosmosDiagnostics\";\nimport type { CosmosHeaders } from \"../../queryExecutionContext\";\nimport { ResourceResponse } from \"../../request\";\nimport type { Resource } from \"../Resource\";\nimport type { Conflict } from \"./Conflict\";\nimport type { ConflictDefinition } from \"./ConflictDefinition\";\n\nexport class ConflictResponse extends ResourceResponse<ConflictDefinition & Resource> {\n  constructor(\n    resource: ConflictDefinition & Resource,\n    headers: CosmosHeaders,\n    statusCode: number,\n    conflict: Conflict,\n    diagnostics: CosmosDiagnostics,\n  ) {\n    super(resource, headers, statusCode, diagnostics);\n    this.conflict = conflict;\n  }\n  /** A reference to the {@link Conflict} corresponding to the returned {@link ConflictDefinition}. */\n  public readonly conflict: Conflict;\n}\n"]}